"""
Package containing all pip commands
"""
from __future__ import absolute_import

from pip.commands.completion import CompletionCommand
<<<<<<< HEAD
from pip.commands.download import DownloadCommand
from pip.commands.freeze import FreezeCommand
from pip.commands.hash import HashCommand
from pip.commands.help import HelpCommand
from pip.commands.list import ListCommand
from pip.commands.check import CheckCommand
=======
from pip.commands.freeze import FreezeCommand
from pip.commands.help import HelpCommand
from pip.commands.list import ListCommand
>>>>>>> ed5a9085bf86f543e4a5903d58afd2302760d16e
from pip.commands.search import SearchCommand
from pip.commands.show import ShowCommand
from pip.commands.install import InstallCommand
from pip.commands.uninstall import UninstallCommand
from pip.commands.wheel import WheelCommand


commands_dict = {
    CompletionCommand.name: CompletionCommand,
    FreezeCommand.name: FreezeCommand,
<<<<<<< HEAD
    HashCommand.name: HashCommand,
=======
>>>>>>> ed5a9085bf86f543e4a5903d58afd2302760d16e
    HelpCommand.name: HelpCommand,
    SearchCommand.name: SearchCommand,
    ShowCommand.name: ShowCommand,
    InstallCommand.name: InstallCommand,
    UninstallCommand.name: UninstallCommand,
<<<<<<< HEAD
    DownloadCommand.name: DownloadCommand,
    ListCommand.name: ListCommand,
    CheckCommand.name: CheckCommand,
=======
    ListCommand.name: ListCommand,
>>>>>>> ed5a9085bf86f543e4a5903d58afd2302760d16e
    WheelCommand.name: WheelCommand,
}


commands_order = [
    InstallCommand,
<<<<<<< HEAD
    DownloadCommand,
=======
>>>>>>> ed5a9085bf86f543e4a5903d58afd2302760d16e
    UninstallCommand,
    FreezeCommand,
    ListCommand,
    ShowCommand,
<<<<<<< HEAD
    CheckCommand,
    SearchCommand,
    WheelCommand,
    HashCommand,
    CompletionCommand,
=======
    SearchCommand,
    WheelCommand,
>>>>>>> ed5a9085bf86f543e4a5903d58afd2302760d16e
    HelpCommand,
]


<<<<<<< HEAD
def get_summaries(ordered=True):
=======
def get_summaries(ignore_hidden=True, ordered=True):
>>>>>>> ed5a9085bf86f543e4a5903d58afd2302760d16e
    """Yields sorted (command name, command summary) tuples."""

    if ordered:
        cmditems = _sort_commands(commands_dict, commands_order)
    else:
        cmditems = commands_dict.items()

    for name, command_class in cmditems:
<<<<<<< HEAD
=======
        if ignore_hidden and command_class.hidden:
            continue

>>>>>>> ed5a9085bf86f543e4a5903d58afd2302760d16e
        yield (name, command_class.summary)


def get_similar_commands(name):
    """Command name auto-correct."""
    from difflib import get_close_matches

    name = name.lower()

    close_commands = get_close_matches(name, commands_dict.keys())

    if close_commands:
        return close_commands[0]
    else:
        return False


def _sort_commands(cmddict, order):
    def keyfn(key):
        try:
            return order.index(key[1])
        except ValueError:
            # unordered items should come last
            return 0xff

    return sorted(cmddict.items(), key=keyfn)
